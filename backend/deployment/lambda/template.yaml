AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: T-Developer MVP Lambda Functions Deployment

Globals:
  Function:
    Timeout: 300
    MemorySize: 1024
    Runtime: python3.9
    Architectures:
      - x86_64
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        AWS_ACCOUNT_ID: !Ref AWS::AccountId
        POWERTOOLS_SERVICE_NAME: t-developer
        POWERTOOLS_METRICS_NAMESPACE: TDeveloper
        LOG_LEVEL: INFO

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - development
      - staging
      - production
    Description: Deployment environment

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID for Lambda functions

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet IDs for Lambda functions

  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID for Lambda functions

Resources:
  # Common Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 't-developer-lambda-role-${Environment}-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: TDeveloperLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:aws:s3:::t-developer-${Environment}/*'
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/t-developer-*'
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/t-developer/*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:t-developer/*'
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeModelWithResponseStream
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'

  # Lambda Layer for Common Dependencies
  CommonDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub 't-developer-common-layer-${Environment}'
      ContentUri: layers/common/
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.9

  # NL Input Agent Lambda
  NLInputAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-nl-input-agent-${Environment}'
      CodeUri: ../../src/agents/production/nl_input/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: nl_input
          TASK_RANGE: '4.1-4.10'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/nl-input
            Method: POST
      ReservedConcurrentExecutions: 10

  # UI Selection Agent Lambda
  UISelectionAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-ui-selection-agent-${Environment}'
      CodeUri: ../../src/agents/production/ui_selection/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: ui_selection
          TASK_RANGE: '4.11-4.20'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/ui-selection
            Method: POST
      ReservedConcurrentExecutions: 10

  # Parser Agent Lambda
  ParserAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-parser-agent-${Environment}'
      CodeUri: ../../src/agents/production/parser/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: parser
          TASK_RANGE: '4.21-4.30'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/parser
            Method: POST
      ReservedConcurrentExecutions: 10

  # Component Decision Agent Lambda
  ComponentDecisionAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-component-decision-agent-${Environment}'
      CodeUri: ../../src/agents/production/component_decision/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: component_decision
          TASK_RANGE: '4.31-4.40'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/component-decision
            Method: POST
      ReservedConcurrentExecutions: 10

  # Match Rate Agent Lambda
  MatchRateAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-match-rate-agent-${Environment}'
      CodeUri: ../../src/agents/production/match_rate/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: match_rate
          TASK_RANGE: '4.41-4.50'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/match-rate
            Method: POST
      ReservedConcurrentExecutions: 10

  # Search Agent Lambda (Higher memory for search operations)
  SearchAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-search-agent-${Environment}'
      CodeUri: ../../src/agents/production/search/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 2048  # More memory for search operations
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: search
          TASK_RANGE: '4.51-4.60'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/search
            Method: POST
      ReservedConcurrentExecutions: 5

  # Generation Agent Lambda (Higher memory and timeout for generation)
  GenerationAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-generation-agent-${Environment}'
      CodeUri: ../../src/agents/production/generation/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 3008  # Maximum memory for generation
      Timeout: 900  # 15 minutes max timeout
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: generation
          TASK_RANGE: '4.61-4.70'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/generation
            Method: POST
      ReservedConcurrentExecutions: 5

  # Assembly Agent Lambda (Higher memory for assembly operations)
  AssemblyAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-assembly-agent-${Environment}'
      CodeUri: ../../src/agents/production/assembly/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 2048
      Timeout: 600  # 10 minutes
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: assembly
          TASK_RANGE: '4.71-4.80'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/assembly
            Method: POST
      ReservedConcurrentExecutions: 5

  # Download Agent Lambda
  DownloadAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 't-developer-download-agent-${Environment}'
      CodeUri: ../../src/agents/production/download/
      Handler: lambda_handler.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 2048
      Timeout: 600
      Layers:
        - !Ref CommonDependenciesLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds: !Ref SubnetIds
      Environment:
        Variables:
          AGENT_NAME: download
          TASK_RANGE: '4.81-4.90'
          S3_BUCKET: !Sub 't-developer-downloads-${Environment}'
      Events:
        ApiGateway:
          Type: Api
          Properties:
            Path: /agents/download
            Method: POST
      ReservedConcurrentExecutions: 5

  # S3 Bucket for Downloads
  DownloadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 't-developer-downloads-${Environment}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldDownloads
            Status: Enabled
            ExpirationInDays: 7
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
            AllowedHeaders:
              - '*'
            MaxAge: 3600

  # DynamoDB Table for Session Management
  SessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 't-developer-sessions-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: session_id
          AttributeType: S
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: created_at
          AttributeType: N
      KeySchema:
        - AttributeName: session_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: user_id_index
          KeySchema:
            - AttributeName: user_id
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # CloudWatch Log Groups
  NLInputLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-nl-input-agent-${Environment}'
      RetentionInDays: 14

  UISelectionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-ui-selection-agent-${Environment}'
      RetentionInDays: 14

  ParserLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-parser-agent-${Environment}'
      RetentionInDays: 14

  ComponentDecisionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-component-decision-agent-${Environment}'
      RetentionInDays: 14

  MatchRateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-match-rate-agent-${Environment}'
      RetentionInDays: 14

  SearchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-search-agent-${Environment}'
      RetentionInDays: 14

  GenerationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-generation-agent-${Environment}'
      RetentionInDays: 14

  AssemblyLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-assembly-agent-${Environment}'
      RetentionInDays: 14

  DownloadLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/t-developer-download-agent-${Environment}'
      RetentionInDays: 14

Outputs:
  NLInputFunctionArn:
    Description: NL Input Agent Lambda Function ARN
    Value: !GetAtt NLInputAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-NLInputFunctionArn'

  UISelectionFunctionArn:
    Description: UI Selection Agent Lambda Function ARN
    Value: !GetAtt UISelectionAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-UISelectionFunctionArn'

  ParserFunctionArn:
    Description: Parser Agent Lambda Function ARN
    Value: !GetAtt ParserAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ParserFunctionArn'

  ComponentDecisionFunctionArn:
    Description: Component Decision Agent Lambda Function ARN
    Value: !GetAtt ComponentDecisionAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-ComponentDecisionFunctionArn'

  MatchRateFunctionArn:
    Description: Match Rate Agent Lambda Function ARN
    Value: !GetAtt MatchRateAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-MatchRateFunctionArn'

  SearchFunctionArn:
    Description: Search Agent Lambda Function ARN
    Value: !GetAtt SearchAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-SearchFunctionArn'

  GenerationFunctionArn:
    Description: Generation Agent Lambda Function ARN
    Value: !GetAtt GenerationAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-GenerationFunctionArn'

  AssemblyFunctionArn:
    Description: Assembly Agent Lambda Function ARN
    Value: !GetAtt AssemblyAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-AssemblyFunctionArn'

  DownloadFunctionArn:
    Description: Download Agent Lambda Function ARN
    Value: !GetAtt DownloadAgentFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-DownloadFunctionArn'

  DownloadsBucketName:
    Description: S3 Bucket for downloads
    Value: !Ref DownloadsBucket
    Export:
      Name: !Sub '${AWS::StackName}-DownloadsBucketName'

  SessionTableName:
    Description: DynamoDB Session Table Name
    Value: !Ref SessionTable
    Export:
      Name: !Sub '${AWS::StackName}-SessionTableName'