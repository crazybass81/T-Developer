# T-Developer Daily Workflow Commands
# 일일 작업 검증 및 완료를 위한 Makefile

.PHONY: help
help:
	@echo "T-Developer Daily Workflow Commands"
	@echo "===================================="
	@echo "make day-validate DAY=3    # Day 3 작업 검증"
	@echo "make day-complete DAY=3    # Day 3 작업 완료 (검증 + 문서 + Git)"
	@echo "make day-report DAY=3      # Day 3 보고서만 생성"
	@echo "make day-fix DAY=3         # Day 3 미완료 작업 자동 수정"
	@echo "make current-day           # 현재 날짜 기준 작업 검증"
	@echo "make week-summary WEEK=1   # Week 1 요약 생성"

# 현재 날짜로부터 Day 번호 계산
CURRENT_DAY := $(shell echo $$(( ($$(date +%s) - $$(date -d '2024-11-14' +%s)) / 86400 + 1 )))

.PHONY: day-validate
day-validate:
	@if [ -z "$(DAY)" ]; then \
		echo "❌ DAY 파라미터가 필요합니다. 예: make day-validate DAY=3"; \
		exit 1; \
	fi
	@echo "🔍 Day $(DAY) 작업 검증 중..."
	@python scripts/daily_workflow.py --day $(DAY) --skip-git

.PHONY: day-complete
day-complete:
	@if [ -z "$(DAY)" ]; then \
		echo "❌ DAY 파라미터가 필요합니다. 예: make day-complete DAY=3"; \
		exit 1; \
	fi
	@echo "🚀 Day $(DAY) 작업 완료 프로세스 시작..."
	@python scripts/daily_workflow.py --day $(DAY) --auto-fix
	@echo "✅ Day $(DAY) 작업이 완료되었습니다!"

.PHONY: day-report
day-report:
	@if [ -z "$(DAY)" ]; then \
		echo "❌ DAY 파라미터가 필요합니다. 예: make day-report DAY=3"; \
		exit 1; \
	fi
	@echo "📊 Day $(DAY) 보고서 생성 중..."
	@python scripts/daily_workflow.py --day $(DAY) --skip-git --report-only

.PHONY: day-fix
day-fix:
	@if [ -z "$(DAY)" ]; then \
		echo "❌ DAY 파라미터가 필요합니다. 예: make day-fix DAY=3"; \
		exit 1; \
	fi
	@echo "🔧 Day $(DAY) 미완료 작업 수정 중..."
	@python scripts/daily_workflow.py --day $(DAY) --auto-fix --skip-git

.PHONY: current-day
current-day:
	@echo "📅 현재 Day: $(CURRENT_DAY)"
	@echo "🚀 Day $(CURRENT_DAY) 작업 검증 시작..."
	@python scripts/daily_workflow.py --day $(CURRENT_DAY) --auto-fix

.PHONY: week-summary
week-summary:
	@if [ -z "$(WEEK)" ]; then \
		echo "❌ WEEK 파라미터가 필요합니다. 예: make week-summary WEEK=1"; \
		exit 1; \
	fi
	@echo "📈 Week $(WEEK) 요약 생성 중..."
	@python scripts/generate_week_summary.py --week $(WEEK)

# Day 3 전용 명령어 (현재 작업)
.PHONY: day3-meta-agents
day3-meta-agents:
	@echo "🤖 Day 3: Meta Agents 구현 시작..."
	@echo "1. Agent Registry 시스템 구현"
	@echo "2. 6.5KB 메모리 검증 구현"
	@echo "3. 3μs 속도 벤치마킹 설정"
	@echo "4. 적합도 추적 초기화"
	@python scripts/implement_day3_meta_agents.py
	@make day-complete DAY=3

# Evolution 안전 검사
.PHONY: evolution-safety-check
evolution-safety-check:
	@echo "🛡️ Evolution Safety 검사 중..."
	@python src/evolution/safety.py --check
	@echo "✅ Evolution Safety 검사 완료"

# 진행 상황 대시보드
.PHONY: dashboard
dashboard:
	@echo "📊 T-Developer Progress Dashboard"
	@echo "================================="
	@python scripts/show_dashboard.py

# 테스트 실행 (일일 작업 검증 포함)
.PHONY: test-daily
test-daily:
	@echo "🧪 일일 작업 테스트 실행..."
	@pytest tests/daily/ -v --tb=short
	@echo "✅ 테스트 완료"

# 문서 자동 생성
.PHONY: docs-generate
docs-generate:
	@echo "📝 문서 자동 생성 중..."
	@python scripts/generate_docs.py
	@echo "✅ 문서 생성 완료"

# 전체 프로젝트 상태 확인
.PHONY: status
status:
	@echo "📊 프로젝트 상태"
	@echo "==============="
	@echo "현재 Day: $(CURRENT_DAY) / 80"
	@echo "현재 Phase: $$(( ($(CURRENT_DAY) - 1) / 20 + 1 ))"
	@echo ""
	@git status --short
	@echo ""
	@echo "최근 커밋:"
	@git log --oneline -5
	@echo ""
	@echo "브랜치: $$(git branch --show-current)"

# 클린업
.PHONY: clean-reports
clean-reports:
	@echo "🧹 보고서 정리 중..."
	@rm -f ../docs/00_planning/reports/*.json
	@rm -f ../docs/00_planning/progress/*.md
	@echo "✅ 정리 완료"