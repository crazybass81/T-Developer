# Production-ready Dockerfile for T-Developer Backend
FROM python:3.11-slim as builder

# Security updates
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
       gcc g++ postgresql-client curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /build

# Install Python dependencies
COPY requirements.txt requirements-enterprise.txt ./
RUN pip install --no-cache-dir --user -r requirements.txt -r requirements-enterprise.txt

# Production image
FROM python:3.11-slim

# Install runtime dependencies only
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
       postgresql-client curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash appuser

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder --chown=appuser:appuser /root/.local /home/appuser/.local

# Copy application code
COPY --chown=appuser:appuser src/ /app/src/
COPY --chown=appuser:appuser migrations/ /app/migrations/
COPY --chown=appuser:appuser scripts/ /app/scripts/

# Add Python packages to PATH
ENV PATH=/home/appuser/.local/bin:$PATH
ENV PYTHONPATH=/app:$PYTHONPATH

# Security: Don't run as root
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Use production server
CMD ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--log-level", "info"]
