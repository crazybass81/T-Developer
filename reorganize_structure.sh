#!/bin/bash
# Reorganize T-Developer project structure

echo "ðŸ“¦ Reorganizing T-Developer project structure..."

# 1. Move test scripts to scripts/tests/
echo "Moving test scripts..."
mkdir -p scripts/tests
mv test_evolution_with_ai.py scripts/tests/ 2>/dev/null || true
mv run_real_evolution.py scripts/tests/ 2>/dev/null || true

# 2. Move documentation to proper locations
echo "Organizing documentation..."
mkdir -p docs/project
mv integration_plan.md docs/project/ 2>/dev/null || true
mv SYSTEM_STATUS.md docs/project/ 2>/dev/null || true
mv MVP_USAGE.md docs/project/ 2>/dev/null || true
mv AGENT_ARCHITECTURE.md docs/architecture/ 2>/dev/null || true
mv MASTER_PLAN.md docs/00_planning/ 2>/dev/null || true

# 3. Clean up coverage reports
echo "Cleaning coverage reports..."
rm -rf htmlcov 2>/dev/null || true
rm -rf backend/htmlcov 2>/dev/null || true

# 4. Move API configs  
echo "Organizing API configs..."
mkdir -p config/api
mv api_endpoint.txt config/api/ 2>/dev/null || true

# 5. Move shell scripts
echo "Organizing shell scripts..."
mkdir -p scripts/shell
mv start_ui.sh scripts/shell/ 2>/dev/null || true
mv tdev scripts/shell/ 2>/dev/null || true

# 6. Create organized structure info
cat > PROJECT_STRUCTURE.md << 'EOF'
# T-Developer Project Structure

```
T-DeveloperMVP/
â”œâ”€â”€ backend/                 # Backend server & agents
â”‚   â”œâ”€â”€ main.py              # FastAPI server
â”‚   â”œâ”€â”€ agent_manager.py     # Agent orchestration
â”‚   â”œâ”€â”€ evolution_engine.py  # Evolution orchestration
â”‚   â”œâ”€â”€ packages/            # Core packages
â”‚   â”‚   â”œâ”€â”€ agents/          # Agent implementations
â”‚   â”‚   â”œâ”€â”€ learning/        # Learning system
â”‚   â”‚   â”œâ”€â”€ performance/     # Performance optimization
â”‚   â”‚   â”œâ”€â”€ sandbox/         # Sandbox environment
â”‚   â”‚   â””â”€â”€ ...
â”‚   â”œâ”€â”€ tests/               # Backend tests
â”‚   â””â”€â”€ references/          # Reference materials
â”‚
â”œâ”€â”€ frontend/                # React frontend
â”‚   â”œâ”€â”€ src/                 # Source code
â”‚   â”œâ”€â”€ public/              # Static assets
â”‚   â””â”€â”€ package.json
â”‚
â”œâ”€â”€ scripts/                 # Utility scripts
â”‚   â”œâ”€â”€ tests/               # Test scripts
â”‚   â”œâ”€â”€ shell/               # Shell scripts
â”‚   â””â”€â”€ *.py                 # Python utilities
â”‚
â”œâ”€â”€ config/                  # Configuration files
â”‚   â”œâ”€â”€ api/                 # API configs
â”‚   â”œâ”€â”€ k6-scripts/          # Load test scripts
â”‚   â””â”€â”€ *.yaml               # Config files
â”‚
â”œâ”€â”€ docs/                    # Documentation
â”‚   â”œâ”€â”€ 00_planning/         # Planning docs
â”‚   â”œâ”€â”€ architecture/        # Architecture docs
â”‚   â”œâ”€â”€ implementation/      # Implementation guides
â”‚   â”œâ”€â”€ operations/          # Operations docs
â”‚   â”œâ”€â”€ project/             # Project management
â”‚   â””â”€â”€ reference/           # API references
â”‚
â”œâ”€â”€ lambda_handlers/         # AWS Lambda handlers
â”œâ”€â”€ infrastructure/          # Infrastructure configs
â”œâ”€â”€ blueprints/              # Service blueprints
â”œâ”€â”€ schemas/                 # Data schemas
â”œâ”€â”€ examples/                # Example code
â”‚
â”œâ”€â”€ README.md                # Project overview
â”œâ”€â”€ CLAUDE.md                # AI assistant guide
â”œâ”€â”€ requirements.txt         # Python dependencies
â”œâ”€â”€ pyproject.toml          # Python project config
â””â”€â”€ docker-compose.yml       # Docker setup
```

## Key Directories

### Backend (`/backend`)
- Core application server and agent implementations
- All business logic and API endpoints
- Tests colocated with source code

### Frontend (`/frontend`)
- React-based web interface
- Redux state management
- WebSocket integration

### Scripts (`/scripts`)
- Deployment scripts
- Testing utilities
- Development tools

### Documentation (`/docs`)
- Comprehensive project documentation
- Architecture decisions
- Implementation guides

### Configuration (`/config`)
- Environment configs
- Test scenarios
- Policy definitions
EOF

echo "âœ… Reorganization complete!"
echo "ðŸ“„ Created PROJECT_STRUCTURE.md for reference"

# Show summary
echo ""
echo "Summary of changes:"
echo "- Test scripts moved to scripts/tests/"
echo "- Documentation organized in docs/"
echo "- Coverage reports cleaned up"
echo "- Shell scripts moved to scripts/shell/"
echo "- Created PROJECT_STRUCTURE.md"