AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM Role for GitHub Actions OIDC - T-Developer v2'

Parameters:
  GitHubOrg:
    Type: String
    Description: GitHub organization/username
  
  GitHubRepo:
    Type: String
    Description: GitHub repository name
    Default: T-DeveloperMVP
  
  OIDCProviderArn:
    Type: String
    Default: ''
    Description: ARN of the GitHub OIDC Provider (leave empty to create)

Conditions:
  CreateOIDCProvider: !Equals [!Ref OIDCProviderArn, '']

Resources:
  # Create OIDC Provider if not provided
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd
  
  # Main GitHub Actions Role
  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: github-actions-t-developer
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GitHubOIDCProvider
                - !Ref OIDCProviderArn
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': sts.amazonaws.com
              StringLike:
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${GitHubOrg}/${GitHubRepo}:*'
      ManagedPolicyArns:
        - !Ref GitHubActionsPolicy
      Tags:
        - Key: Environment
          Value: development
        - Key: Project
          Value: t-developer-v2
        - Key: ManagedBy
          Value: CloudFormation
  
  # Policy for GitHub Actions
  GitHubActionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: github-actions-t-developer-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Bedrock permissions
          - Sid: BedrockAccess
            Effect: Allow
            Action:
              - bedrock:InvokeModel
              - bedrock:InvokeModelWithResponseStream
              - bedrock:GetFoundationModel
              - bedrock:ListFoundationModels
            Resource: '*'
          
          # Bedrock Agent permissions
          - Sid: BedrockAgentAccess
            Effect: Allow
            Action:
              - bedrock:GetAgent
              - bedrock:GetAgentAlias
              - bedrock:InvokeAgent
              - bedrock:UpdateAgent
              - bedrock:UpdateAgentAlias
              - bedrock:TagResource
            Resource:
              - !Sub 'arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent/*'
              - !Sub 'arn:aws:bedrock:${AWS::Region}:${AWS::AccountId}:agent-alias/*'
          
          # S3 permissions
          - Sid: S3Access
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:GetBucketVersioning
            Resource:
              - !Sub 'arn:aws:s3:::t-developer-*'
              - !Sub 'arn:aws:s3:::t-developer-*/*'
          
          # DynamoDB permissions
          - Sid: DynamoDBAccess
            Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
            Resource:
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/t-developer-*'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/t-developer-*/index/*'
          
          # SQS permissions
          - Sid: SQSAccess
            Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
            Resource:
              - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:agent-squad-*'
              - !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:t-developer-*'
          
          # CloudWatch permissions
          - Sid: CloudWatchAccess
            Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
            Resource: '*'
          
          # Secrets Manager permissions
          - Sid: SecretsManagerAccess
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource:
              - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:t-developer/*'
          
          # ECR permissions (for Docker images)
          - Sid: ECRAccess
            Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Resource:
              - !Sub 'arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/t-developer-*'
          
          # CloudFormation permissions (for infrastructure)
          - Sid: CloudFormationAccess
            Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:UpdateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
            Resource:
              - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/t-developer-*/*'
          
          # IAM permissions (limited)
          - Sid: IAMReadAccess
            Effect: Allow
            Action:
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListRolePolicies
              - iam:ListAttachedRolePolicies
            Resource:
              - !Sub 'arn:aws:iam::${AWS::AccountId}:role/t-developer-*'
  
  # Setup role for initial configuration
  GitHubActionsSetupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: github-actions-setup
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GitHubOIDCProvider
                - !Ref OIDCProviderArn
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': sts.amazonaws.com
              StringLike:
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${GitHubOrg}/${GitHubRepo}:*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/CloudFormationFullAccess
      Tags:
        - Key: Environment
          Value: development
        - Key: Project
          Value: t-developer-v2
        - Key: Purpose
          Value: setup-only

Outputs:
  RoleArn:
    Description: ARN of the GitHub Actions role
    Value: !GetAtt GitHubActionsRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-role-arn'
  
  SetupRoleArn:
    Description: ARN of the setup role
    Value: !GetAtt GitHubActionsSetupRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-setup-role-arn'
  
  OIDCProviderArn:
    Description: ARN of the OIDC Provider
    Value: !If
      - CreateOIDCProvider
      - !Ref GitHubOIDCProvider
      - !Ref OIDCProviderArn
    Export:
      Name: !Sub '${AWS::StackName}-oidc-provider-arn'