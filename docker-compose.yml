version: '3.8'

services:
  # MCP Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: t-developer-mcp
    environment:
      - ENVIRONMENT=development
      - MCP_SECURITY_TOKEN=${MCP_SECURITY_TOKEN}
      - LOG_LEVEL=INFO
    volumes:
      - ./workspace:/workspace
      - ./logs:/app/logs
    ports:
      - "3333:3333"
    networks:
      - t-developer-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.connect(('localhost', 3333)); s.close()"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Research Agent
  research-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: t-developer-research
    command: ["python", "-m", "packages.agents.research"]
    environment:
      - ENVIRONMENT=development
      - AGENT_TYPE=research
      - AWS_REGION=${AWS_REGION}
    volumes:
      - ./workspace:/workspace
    networks:
      - t-developer-net
    depends_on:
      - mcp-server
    restart: unless-stopped

  # Planner Agent
  planner-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: t-developer-planner
    command: ["python", "-m", "packages.agents.planner"]
    environment:
      - ENVIRONMENT=development
      - AGENT_TYPE=planner
      - AWS_REGION=${AWS_REGION}
    volumes:
      - ./workspace:/workspace
    networks:
      - t-developer-net
    depends_on:
      - mcp-server
    restart: unless-stopped

  # Refactor Agent
  refactor-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: t-developer-refactor
    command: ["python", "-m", "packages.agents.refactor"]
    environment:
      - ENVIRONMENT=development
      - AGENT_TYPE=refactor
      - AWS_REGION=${AWS_REGION}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ./workspace:/workspace
    networks:
      - t-developer-net
    depends_on:
      - mcp-server
    restart: unless-stopped

  # Evaluator Agent
  evaluator-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: t-developer-evaluator
    command: ["python", "-m", "packages.agents.evaluator"]
    environment:
      - ENVIRONMENT=development
      - AGENT_TYPE=evaluator
      - AWS_REGION=${AWS_REGION}
    volumes:
      - ./workspace:/workspace
    networks:
      - t-developer-net
    depends_on:
      - mcp-server
    restart: unless-stopped

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: t-developer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - t-developer-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LocalStack for AWS services (development)
  localstack:
    image: localstack/localstack:latest
    container_name: t-developer-localstack
    environment:
      - SERVICES=s3,dynamodb,sqs,secretsmanager,bedrock
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    ports:
      - "4566:4566"
      - "4571:4571"
    volumes:
      - localstack-data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - t-developer-net
    restart: unless-stopped

networks:
  t-developer-net:
    driver: bridge

volumes:
  redis-data:
  localstack-data: