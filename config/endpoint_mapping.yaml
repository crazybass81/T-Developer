# T-Developer AgentCore Endpoint Mapping Configuration
# Maps deployed agents to their API endpoints

version: "1.0.0"
environment: ${ENVIRONMENT:-development}
region: ${AWS_REGION:-us-east-1}

# Bedrock Agent Configuration
bedrock:
  agent_id: ${BEDROCK_AGENT_ID:-NYZHMLSDOJ}
  agent_alias_id: ${BEDROCK_AGENT_ALIAS_ID:-IBQK7SYNGG}
  runtime_endpoint: "https://bedrock-agent-runtime.us-east-1.amazonaws.com"

# API Gateway Configuration
api_gateway:
  base_url: "https://api.t-developer.com/v1"
  stage: ${ENVIRONMENT:-development}
  api_key_required: true
  throttle_rate: 1000  # requests per second
  throttle_burst: 2000  # burst capacity

# Agent Endpoint Mappings
endpoints:
  # Core Processing Agents
  nl_input:
    name: "NL Input Agent"
    version: "2.0.0"
    path: "/agents/nl-input"
    method: "POST"
    bedrock_action: "ProcessNaturalLanguage"
    timeout: 30000  # ms
    memory_limit: 6500  # bytes (6.5KB)
    instantiation_time: 3  # microseconds
    health_check: "/agents/nl-input/health"
    retry_policy:
      max_attempts: 3
      backoff_base: 2

  ui_selection:
    name: "UI Selection Agent"
    version: "2.0.0"
    path: "/agents/ui-selection"
    method: "POST"
    bedrock_action: "SelectUIComponents"
    timeout: 25000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/ui-selection/health"

  parser:
    name: "Parser Agent"
    version: "2.0.0"
    path: "/agents/parser"
    method: "POST"
    bedrock_action: "ParseStructure"
    timeout: 20000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/parser/health"

  # Decision & Matching Agents
  component_decision:
    name: "Component Decision Agent"
    version: "2.0.0"
    path: "/agents/component-decision"
    method: "POST"
    bedrock_action: "MakeComponentDecision"
    timeout: 30000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/component-decision/health"

  match_rate:
    name: "Match Rate Agent"
    version: "2.0.0"
    path: "/agents/match-rate"
    method: "POST"
    bedrock_action: "CalculateMatchRate"
    timeout: 15000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/match-rate/health"

  # Search & Discovery Agents
  search:
    name: "Search Agent"
    version: "2.0.0"
    path: "/agents/search"
    method: "POST"
    bedrock_action: "SearchComponents"
    timeout: 45000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/search/health"
    parallel_execution: true
    max_parallel: 5

  # Generation & Assembly Agents
  generation:
    name: "Generation Agent"
    version: "2.0.0"
    path: "/agents/generation"
    method: "POST"
    bedrock_action: "GenerateCode"
    timeout: 60000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/generation/health"
    streaming_enabled: true

  assembly:
    name: "Assembly Agent"
    version: "2.0.0"
    path: "/agents/assembly"
    method: "POST"
    bedrock_action: "AssembleComponents"
    timeout: 45000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/assembly/health"

  download:
    name: "Download Agent"
    version: "2.0.0"
    path: "/agents/download"
    method: "POST"
    bedrock_action: "PrepareDownload"
    timeout: 30000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/download/health"

  # Security & Testing Agents
  security:
    name: "Security Agent"
    version: "2.0.0"
    path: "/agents/security"
    method: "POST"
    bedrock_action: "SecurityScan"
    timeout: 60000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/security/health"
    priority: "high"

  test:
    name: "Test Agent"
    version: "2.0.0"
    path: "/agents/test"
    method: "POST"
    bedrock_action: "RunTests"
    timeout: 90000
    memory_limit: 6500
    instantiation_time: 3
    health_check: "/agents/test/health"
    async_execution: true

# Workflow Endpoints
workflows:
  complete_generation:
    name: "Complete Generation Workflow"
    path: "/workflows/complete-generation"
    method: "POST"
    agents:
      - nl_input
      - parser
      - component_decision
      - search
      - generation
      - assembly
      - download
    timeout: 300000  # 5 minutes total
    parallel_stages:
      - [nl_input]
      - [parser, ui_selection]
      - [component_decision, match_rate]
      - [search]
      - [generation]
      - [assembly]
      - [security, test]
      - [download]

  quick_search:
    name: "Quick Search Workflow"
    path: "/workflows/quick-search"
    method: "POST"
    agents:
      - nl_input
      - search
      - match_rate
    timeout: 60000

# Health Check Configuration
health_checks:
  interval: 30  # seconds
  timeout: 5000  # ms
  healthy_threshold: 2
  unhealthy_threshold: 3

# Monitoring Configuration
monitoring:
  metrics_namespace: "T-Developer/AgentCore"
  enable_detailed_metrics: true
  log_level: ${LOG_LEVEL:-INFO}
  trace_sampling_rate: 0.1  # 10% of requests

# Rate Limiting Configuration
rate_limiting:
  default:
    requests_per_second: 100
    burst_size: 200
  by_endpoint:
    generation:
      requests_per_second: 50
      burst_size: 100
    test:
      requests_per_second: 20
      burst_size: 40

# Circuit Breaker Configuration
circuit_breaker:
  failure_threshold: 5
  recovery_timeout: 30  # seconds
  half_open_requests: 3

# Authentication & Authorization
authentication:
  type: "jwt"
  issuer: "https://auth.t-developer.com"
  audience: "t-developer-api"
  public_key_path: "/secrets/jwt-public.key"

authorization:
  default_role: "user"
  admin_endpoints:
    - "/agents/*/deploy"
    - "/agents/*/rollback"
    - "/workflows/*/update"

# Deployment Configuration
deployment:
  strategy: "blue-green"
  health_check_grace_period: 60  # seconds
  auto_rollback_on_failure: true
  canary:
    enabled: false
    percentage: 10
    duration: 300  # seconds

# Version Management
versioning:
  strategy: "semantic"
  auto_increment: true
  tag_pattern: "v{major}.{minor}.{patch}"

# Logging Configuration
logging:
  destinations:
    - type: "cloudwatch"
      log_group: "/aws/t-developer/agentcore"
      retention_days: 30
    - type: "s3"
      bucket: "t-developer-logs"
      prefix: "agentcore/"

# Tags for Resource Management
tags:
  Project: "T-Developer"
  Component: "AgentCore"
  Environment: ${ENVIRONMENT:-development}
  ManagedBy: "Terraform"
  CostCenter: "Engineering"
  Owner: "DevOps Team"
