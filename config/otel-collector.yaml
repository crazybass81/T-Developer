# OpenTelemetry Collector Configuration
# Day 5: Monitoring & Logging Infrastructure
# Generated: 2024-11-18
# For T-Developer Evolution System

receivers:
  # OTLP Receiver for traces, metrics, and logs
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus metrics scraping
  prometheus:
    config:
      scrape_configs:
        - job_name: 'evolution-engine'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:8080']
              labels:
                component: 'evolution'

        - job_name: 'agent-registry'
          scrape_interval: 30s
          static_configs:
            - targets: ['localhost:8081']
              labels:
                component: 'agents'

        - job_name: 'safety-system'
          scrape_interval: 10s  # More frequent for safety
          static_configs:
            - targets: ['localhost:8082']
              labels:
                component: 'safety'
                critical: 'true'

  # System metrics
  hostmetrics:
    collection_interval: 30s
    scrapers:
      cpu:
      memory:
      disk:
      network:
      load:
      processes:

  # Application logs
  filelog:
    include:
      - /var/log/evolution/*.log
      - /var/log/agents/*.log
      - /var/log/safety/*.log
    operators:
      - type: json_parser
        timestamp:
          parse_from: attributes.time
          layout: '%Y-%m-%dT%H:%M:%S.%fZ'
      - type: move
        from: attributes.component
        to: resource["service.name"]
      - type: severity_parser
        parse_from: attributes.level

processors:
  # Add Evolution System metadata
  resource:
    attributes:
      - key: environment
        value: ${ENVIRONMENT}
        action: upsert
      - key: deployment
        value: t-developer-evolution
        action: upsert
      - key: version
        value: ${VERSION}
        action: upsert

  # Batch processing for efficiency
  batch:
    timeout: 5s
    send_batch_size: 1024
    send_batch_max_size: 2048

  # Memory limiter to prevent OOM
  memory_limiter:
    check_interval: 1s
    limit_mib: 512
    spike_limit_mib: 128

  # Filter for critical metrics
  filter/critical:
    metrics:
      include:
        match_type: regexp
        metric_names:
          - ".*safety.*"
          - ".*violation.*"
          - ".*emergency.*"

  # Attribute processing
  attributes:
    actions:
      - key: ai.autonomy_level
        value: 0.85
        action: insert
      - key: constraint.memory_kb
        value: 6.5
        action: insert
      - key: constraint.instantiation_us
        value: 3.0
        action: insert

  # Transform metrics for Evolution System
  transform:
    metric_statements:
      - context: datapoint
        statements:
          # Check instantiation time constraint
          - set(attributes["constraint.violated"], true) where metric.name == "instantiation_time" and value > 3.0
          # Check memory constraint
          - set(attributes["constraint.violated"], true) where metric.name == "memory_usage" and value > 6.5

  # Tail sampling for traces
  tail_sampling:
    decision_wait: 10s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies:
      # Always sample safety-critical traces
      - name: safety-critical
        type: string_attribute
        string_attribute:
          key: component
          values: ["safety", "emergency"]
      # Sample slow operations
      - name: slow-operations
        type: latency
        latency:
          threshold_ms: 1000
      # Sample errors
      - name: errors
        type: status_code
        status_code:
          status_codes: [ERROR]
      # Default sampling
      - name: probabilistic
        type: probabilistic
        probabilistic:
          sampling_percentage: 10

exporters:
  # AWS X-Ray for distributed tracing
  awsxray:
    region: ${AWS_REGION}
    no_verify_ssl: false
    local_mode: false

  # CloudWatch for metrics and logs
  awscloudwatchmetrics:
    region: ${AWS_REGION}
    namespace: T-Developer/Evolution
    dimension_rollup_option: NoDimensionRollup
    metric_declarations:
      - dimensions:
          - [Environment, Component]
          - [Environment, Component, AgentId]
        metric_name_selectors:
          - instantiation_time
          - memory_usage
          - fitness_score
          - evolution_cycles
      - dimensions:
          - [Environment]
        metric_name_selectors:
          - safety_violations
          - constraint_violations

  awscloudwatchlogs:
    region: ${AWS_REGION}
    log_group_name: /aws/evolution/otel
    log_stream_name: collector

  # Prometheus for local metrics
  prometheus:
    endpoint: 0.0.0.0:9090
    namespace: evolution
    const_labels:
      environment: ${ENVIRONMENT}

  # Debug output (disable in production)
  logging:
    loglevel: info

  # S3 for long-term storage
  awss3:
    region: ${AWS_REGION}
    s3_bucket: t-developer-metrics-${ENVIRONMENT}
    s3_prefix: otel/
    s3_partition: minute

  # Send critical alerts to SNS
  # Custom exporter would be needed for this
  # sns:
  #   region: ${AWS_REGION}
  #   topic_arn: arn:aws:sns:${AWS_REGION}:${ACCOUNT_ID}:t-developer-safety-alerts-${ENVIRONMENT}
  #   filter: critical

extensions:
  # Health check endpoint
  health_check:
    endpoint: 0.0.0.0:13133
    path: /health

  # Performance profiler
  pprof:
    endpoint: 0.0.0.0:1777

  # zPages for debugging
  zpages:
    endpoint: 0.0.0.0:55679

service:
  # Extensions to enable
  extensions:
    - health_check
    - pprof
    - zpages

  # Pipeline definitions
  pipelines:
    # Traces pipeline
    traces:
      receivers:
        - otlp
      processors:
        - memory_limiter
        - resource
        - attributes
        - batch
        - tail_sampling
      exporters:
        - awsxray
        - logging

    # Metrics pipeline
    metrics:
      receivers:
        - otlp
        - prometheus
        - hostmetrics
      processors:
        - memory_limiter
        - resource
        - attributes
        - transform
        - filter/critical
        - batch
      exporters:
        - awscloudwatchmetrics
        - prometheus
        - awss3
        - logging

    # Logs pipeline
    logs:
      receivers:
        - otlp
        - filelog
      processors:
        - memory_limiter
        - resource
        - attributes
        - batch
      exporters:
        - awscloudwatchlogs
        - awss3
        - logging

  # Telemetry for the collector itself
  telemetry:
    logs:
      level: info
      initial_fields:
        service: otel-collector
    metrics:
      level: detailed
      address: 0.0.0.0:8888
