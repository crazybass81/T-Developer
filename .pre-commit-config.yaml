# T-Developer Evolution System Pre-commit Configuration
# AI 자율 진화 시스템의 코드 품질 보장

repos:
  # Python 코드 포맷터 - Black
  - repo: https://github.com/psf/black
    rev: 23.12.0
    hooks:
      - id: black
        language_version: python3.11
        args: ['--line-length=100']
        exclude: |
          (?x)^(
            .*migrations/.*|
            .*\.venv/.*|
            .*node_modules/.*|
            .*\.git/.*
          )$

  # Python import 정렬 - isort
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '100']

  # Python 코드 품질 검사 - Flake8
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=100', '--ignore=E203,W503,E501']
        exclude: |
          (?x)^(
            .*migrations/.*|
            .*\.venv/.*
          )$

  # Evolution Safety 검사 (커스텀 훅)
  - repo: local
    hooks:
      - id: evolution-safety-check
        name: Evolution Safety Check
        entry: python backend/src/evolution/safety.py --check
        language: system
        files: '^backend/src/evolution/.*\.py$'
        pass_filenames: false

      # Agent 크기 제약 검증 (6.5KB)
      - id: agent-size-check
        name: Agent Size Constraint Check (< 6.5KB)
        entry: bash -c 'for file in "$@"; do if [[ $file == *"agent"*.py ]]; then size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null); if [ $size -gt 6656 ]; then echo "❌ $file exceeds 6.5KB limit ($size bytes)"; exit 1; fi; fi; done' --
        language: system
        files: '.*agent.*\.py$'

      # Python 전용 검증 (백엔드에 JS/TS 없음)
      - id: python-only-backend
        name: Python Only Backend Check
        entry: bash -c 'if ls backend/src/**/*.{js,ts,jsx,tsx} 2>/dev/null | grep -v node_modules | grep -v frontend; then echo "❌ JavaScript/TypeScript files found in backend!"; exit 1; fi; exit 0'
        language: system
        pass_filenames: false
        always_run: true

      # 작업 단위 자동 검증
      - id: task-validation
        name: Task Unit Validation
        entry: python backend/scripts/task_validator.py --recent
        language: system
        pass_filenames: false
        stages: [pre-commit]

  # 기본 파일 검사
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # 파일 끝 개행 문자
      - id: end-of-file-fixer
        exclude: |
          (?x)^(
            .*\.min\..*|
            .*\.svg|
            .*\.png|
            .*\.jpg
          )$
      
      # 줄 끝 공백 제거
      - id: trailing-whitespace
        exclude: |
          (?x)^(
            .*\.md|
            .*\.svg
          )$
      
      # YAML 문법 검사
      - id: check-yaml
        exclude: |
          (?x)^(
            .*cloudformation.*\.yaml|
            .*cloudformation.*\.yml|
            infrastructure/.*\.yaml|
            infrastructure/.*\.yml|
            backend/deployment/ecs/.*\.yaml
          )$
      
      # JSON 문법 검사
      - id: check-json
      
      # 대용량 파일 방지 (500KB)
      - id: check-added-large-files
        args: ['--maxkb=500']
        exclude: |
          (?x)^(
            .*\.sql|
            .*\.dump|
            .*package-lock\.json
          )$
      
      # 병합 충돌 마커 검사
      - id: check-merge-conflict
      
      # Python 문법 검사
      - id: check-ast
        exclude: |
          (?x)^(
            .*test_.*\.py|
            .*migrations/.*
          )$
      
      # 개인키/비밀키 감지
      - id: detect-private-key
      
      # AWS 자격 증명 감지
      - id: detect-aws-credentials
        args: ['--allow-missing-credentials']
      
      # 심볼릭 링크 검사
      - id: check-symlinks
      
      # 실행 권한 검사
      - id: check-executables-have-shebangs
      
      # Shebang 검사
      - id: check-shebang-scripts-are-executable

  # 보안 검사 - Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-ll', '--skip', 'B101,B601']
        exclude: |
          (?x)^(
            .*test_.*\.py|
            .*tests/.*
          )$

  # Markdown 린트
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: ['--fix', '--disable', 'MD013', '--disable', 'MD024']

  # Dockerfile 린트
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # 민감 정보 스캔
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            .*\.lock|
            .*package-lock\.json|
            .*\.svg
          )$

# 설정
default_language_version:
  python: python3.11

# 실행 단계
default_stages: [pre-commit]

# 전역 제외 패턴
exclude: |
  (?x)^(
    \.git/.*|
    \.venv/.*|
    venv/.*|
    node_modules/.*|
    build/.*|
    dist/.*|
    .*\.egg-info/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    \.tox/.*|
    htmlcov/.*|
    docs/_build/.*|
    .*\.min\.js|
    .*\.min\.css|
    infrastructure/terraform/\.terraform/.*
  )$

# 실패 시 빠른 종료
fail_fast: false

# CI 모드 (GitHub Actions에서 사용)
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
    
    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false